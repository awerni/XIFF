% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NeuralnetworkDataClassifier.R
\name{modelInfoNeuralNetwork}
\alias{modelInfoNeuralNetwork}
\title{Create neuralnetwork model info structure for caret classification}
\usage{
modelInfoNeuralNetwork()
}
\description{
Create neuralnetwork model info structure for caret classification
}
\details{
For some reason caret does not support neuralnetwork package for classification task. The code below implements required structure to make it work.
For more information of implementing custom ML method in caret please refer to https://topepo.github.io/caret/using-your-own-model-in-train.html
}
\examples{
library(dplyr)
data("train_model_data", package = "XIFF")
modelInfo <- modelInfoNeuralNetwork()

# Basic usage
param <- data.frame(layer1=  10, layer2 = 10, layer3 = 10)
x <- train_model_data \%>\% select(-class, -celllinename)
y <- train_model_data$class

fit <- modelInfo$fit(x = x, y = y, param = param)
modelInfo$predict(fit, train_model_data)

# With caret
library(caret)
xdata <- train_model_data \%>\% select(ENSG00000169047, ENSG00000188322, class)

fitControl <- caret::trainControl(
  method = "none",
  savePredictions = "final"
)

model <- caret::train(
    class ~ ., xdata, method = modelInfoNeuralNetwork(),
    trControl = fitControl, tuneGrid = param)
predict(model)

modelInfoNeuralNetwork()$varImp(model) # variable importance
caret::varImp(model) # it performs some kind of reguralization - and shouldn't be used

predict(model)
predict(model, type = "prob")

}
